pipeline {
    agent any

    tools {
        jdk 'jdk17'
        nodejs 'node20'
    }

    environment {
        IMAGE_NAME = 'lipiga/devopstask1'
        CONTAINER_NAME = 'react_container'
        APP_PORT = '3003'
    }

    stages {

        stage('Clean Workspace') {
            steps {
                script {
                    echo "Cleaning workspace..."
                    deleteDir()
                }
            }
        }

        stage('Git Checkout') {
            steps {
                script {
                    git branch: 'main',
                        credentialsId: 'github_secret',
                        url: 'https://github.com/LipigaArunachalam/devops2.git'
                }
            }
        }

        stage('Install Dependencies & Build') {
            steps {
                script {
                    sh '''
                    if [ -f package.json ]; then
                        echo "Installing dependencies..."
                        npm install
                        npm run build
                    else
                        echo "ERROR: package.json not found!"
                        exit 1
                    fi
                    '''
                }
            }
        }

        stage('Docker Build & Push') {
            steps {
                script {
                    withDockerRegistry(credentialsId: 'docker', toolName: 'docker') {
                        def tag = "latest"

                        sh """
                        docker build -t ${IMAGE_NAME} .
                        docker tag ${IMAGE_NAME} ${IMAGE_NAME}:${tag}
                        docker push ${IMAGE_NAME}:${tag}
                        """
                    }
                }
            }
        }

        stage('Deploy Docker Container') {
            steps {
                script {
                    sh """
                    docker stop ${CONTAINER_NAME} || true
                    docker rm ${CONTAINER_NAME} || true
                    docker run -d --name ${CONTAINER_NAME} -p ${APP_PORT}:3000 ${IMAGE_NAME}:latest
                    """
                }
            }
        }
    }
}
